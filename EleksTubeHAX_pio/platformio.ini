; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; common settings for all environments
[env]
platform = espressif32
framework = arduino

; If ESPTool fails to read or write all of the firmware, reduce the baud rate of the connection (e.g., to 115200 or less).
upload_speed = 921600
monitor_speed = 115200

; Tested and working with following versions. If you have issues, revert to library versions listed below.
lib_deps = 
	adafruit/Adafruit NeoPixel ; adafruit/Adafruit NeoPixel@1.12.5
	paulstoffregen/Time ; paulstoffregen/Time@1.6.1
	bodmer/TFT_eSPI ; bodmer/TFT_eSPI@2.5.43
	knolleary/PubSubClient ; knolleary/PubSubClient@2.8.0
	bblanchon/ArduinoJson ; bblanchon/ArduinoJson@7.4.1
	makuna/RTC ; makuna/RTC@2.5.0
	adafruit/RTClib ; adafruit/RTClib@^2.1.4

build_flags =
	-DCORE_DEBUG_LEVEL=0	; Set to 0 for no debug (saves flash memory); Set to 5 for full debug
	; -D CREATE_FIRMWAREFILE	; "activate" the extra_script script_build_fs_and_merge.py

board_build.filesystem = spiffs

extra_scripts =
	script_configure_tft_lib.py ; copy configuration files into TFT_eSPI library folder
	script_build_fs_and_merge.py ; build the filesystem image and merge it with the other firmware files to one combined binary with the name of the defined hardware in name

; https://github.com/danmar/cppcheck/blob/main/man/manual.md
check_flags =
    --enable=all
    --suppress=unusedFunction
    ; --suppressions-list=<file>


; PIO environment for original EleksTube IPS clocks with 4MB flash.
[env:EleksTube_4MB]
board = esp32dev
build_flags =
  ${env.build_flags}
  -D HARDWARE_ELEKSTUBE_CLOCK
board_build.partitions = partition_4mb.csv

; PIO environment for original EleksTube clock Gen2.1 (EleksTube IPS Classic Edition/Pro/PR1/PR2, ESP32 Pico D4 Chip).
[env:EleksTube_Gen2]
board = esp32dev
build_flags =
  ${env.build_flags}
  -D HARDWARE_ELEKSTUBE_GEN2_CLOCK
board_build.partitions = partition_4mb.csv

; PIO environment for the Si Hai copy of the clock.
[env:SI_HAI]
board = esp32dev
build_flags =
  ${env.build_flags}
  -D HARDWARE_SI_HAI_CLOCK
board_build.partitions = partition_4mb.csv

; PIO environment for the NovelLife clocks.
;   NovelLife SE version (Gesture only) - tested and working!
;   Non-SE version (Buttons only) NOT tested!
;   Pro version (Buttons and Gesture) NOT tested!
[env:NovelLife]
board = esp32dev
build_flags =
  ${env.build_flags}
  -D HARDWARE_NOVELLIFE_CLOCK
board_build.partitions = partition_4mb.csv
  
; PIO environment for the PunkCyber / RGB Glow tube / PCBway clocks.
[env:PunkCyber]
board = esp32dev
build_flags =
  ${env.build_flags}
  -D HARDWARE_PUNKCYBER_CLOCK
board_build.partitions = partition_4mb.csv

; PIO environment for all clocks with 8MB flash on PCB (like the IPSTube model H401 and H402).
[env:IPSTube_8MB]
board = esp32dev8MB
build_flags =
  ${env.build_flags}
  -D HARDWARE_IPSTUBE_CLOCK
board_build.partitions = partition_8MB.csv
